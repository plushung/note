StringBuilder  StringBuffer：
	这两个类的对象都能够被多次的修改，并且不产生新的未使用对象。
	便于处理字符串

StringBuilder ：
	线程不安全的，效率高
	普通String进行+操作时，JVM自动使用StringBuilder来构建String
	
	每进行一次String的+=运算jvm就创建一个StringBuilder来连接String，导致效率低
		解决：
			在编码时，使用StringBuilder来处理频繁连接的字符串，而不用+来连接
	
	方法
		append()：在字符串后添加字符串
		delete()：删除指定范围的子字符串
		insert():在指定位置插入字符串
	
StringBuffer：
	线程安全的，通过Synchronize关键子保证线程安全，效率低

使用场景：
	StringBuilder的速度》StringBuffer，so多数情况下建议使用 StringBuilder--》fast
	在要求线程安全条件下，则用StringBuffer--》safe

java字符串的模式匹配
	正则表达式
		java中，正则表达式的\b,要写成\\b
		
	java的Regex类
		Pattern类	//模具
			创建一个编译好的Pattern，即模式
			Pattern.compile（“regex”）
				编译一段模式
		Matcher类	//经模具铸造做来的成品
			一个字符串经Pattern匹配得出的结果
			通过pattern.matcher（“String”）取得
			
			find()：匹配整段字符串，每次匹配一个结果
			group():取得上一次匹配的结果
			start()：匹配结果的起始位置
			end()：匹配结果的结束位置
			matches()：整段字符串完全匹配才返回
			
		(?=re)	//匹配输入字符串中有re的地方，匹配到的结果不含re，正向预查
		(?!re)		//匹配输入字符串中无re的地方，匹配到的结果不含re，负向预查
		(?:re)		//匹配输入字符串中有re的地方，匹配到的结果含re，非获取匹配
