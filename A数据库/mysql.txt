存储引擎
	InnoDb	适用与写多场景，大量update
		支持事务：支持4个事务隔离级别，支持多版本读。
		行级锁定（更新时一般是锁定当前行）：通过索引实现，全表扫描仍然会是表锁。
		读写阻塞与事务隔离级别相关。
		具有非常高效的缓存特性：能缓存索引，也能缓存数据。
		整个表和主键以Cluster方式存储，组成一颗平衡树。
 	 	所有Secondary Index都会保存主键信息。
		支持分区，表空间，类似Oracle数据库。
		支持外键约束，5.5以前不支持全文索引，之后版本支持了。
	MyISAM	适用于读多写少场景，大量select
		不支持事务（事务是指逻辑上的一组操作，组成这组操作的各个单元，要么全部成功要么全部失败）。
		表级锁定（更新时锁整个表）
		读写互相阻塞：不仅会在写入的时候阻塞读取，MyISAM还会在读取的时候阻塞写入，但读本身不会阻塞另外的读。
		只会缓存索引：MyISAM可以通过key_buffer_size缓存索引，以大大提高访问性能，减少磁盘I/O，但这个缓存区只会缓存索引，而不会缓存数据。
		读取速度较快，占用资源相对少。
		不支持外键约束，但支持全文索引。
		
Innode
	主键索引采用聚集索引的方式来存放数据，因此,innodb必需要有主键，B+树的叶子节点直接存放完整的数据记录
	
MyISAM 非聚集索引
	其索引的叶子节点采用的方法是：B+树的叶子节点只存放数据的地址。
		
		
