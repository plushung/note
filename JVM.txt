方法区：存放线程执行的字节码指令
堆区：存放数据对象
栈区：存放线程工作状态,，存放变量(引用)，调用函数时线程状态保存在棧区

垃圾回收机制
	java的内存管理使用自适应的垃圾回收技术:"标记-清除"+"停止-复制"
		自适应：
			当无用对象的内存碎片较少时，自适应地使用"标记-清除"法来进行垃圾回收
			当无用对象的内存碎片较多时，自适应地使用"停止-复制"法来进行垃圾回收
		
	查找'活'对象
		通过遍历堆栈区和静态存储区的引用，找出这些引用所指向的存活的对象。
		
	停止-复制:
		在清除无用对象，释放内存前先停止程序运行，再执行清除工作
		
		过程
			1.查找'活'对象
			2.将活的对象复制到内存中的新的堆上并合理排序		//复制过程中对对象进行了编排，所以清理后空闲的内存地址空间是连续的
			3.更新存活对象的引用
		
		适用
			因为是要停止程序和用复制的方式，频繁停止-复制会造成性能损失
			所以适用于无用对象比较多的情况
		
	标记-清除:
		不进行对象复制，只是对存活的对象进行标记，然后把没被标记到的对象的内存释放
		
		过程
			1.查找'活'对象，并标记
			2.清除没被标记对象的内存	//清理过程知识释放无用对象，所以清理后空闲的内存地址空间是不连续的
		
		适用
			因为是通过程序运行时标记对象的方式，不用暂停程序，在只有少量碎片时既可以保证程序性能，又能释放内存空间
			所以适用于无用对象比较少的情况